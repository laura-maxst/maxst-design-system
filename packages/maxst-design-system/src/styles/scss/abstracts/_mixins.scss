// light mode, dark mode 설정을 위한
@mixin spread-map($map: ()) {
  @each $key, $value in $map {
    #{$key}: $value;
  }
}

@mixin global {
  box-sizing: border-box;
  word-break: keep-all;
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none; /* Firefox */

  &::-webkit-scrollbar {
    display: none; /* Chrome, Safari, Opera*/
  }
}

//font 관련
@mixin fontScales($scale, $size) {
  .font-size-#{$scale} {
    font-size: #{$size};
  }
}
@mixin fontWeights($key, $value) {
  .font-weight-#{$key} {
    font-weight: #{$value};
  }
}

// width
@mixin max-width($width-size: 1440px) {
  @if $width-size {
    max-width: #{$width-size};
  }
}

// shadow
@mixin shadow-level1 {
  box-shadow: 0px 0px 2px rgba(33, 38, 49, 0.12),
    2px 0px 8px rgba(33, 38, 49, 0.12);
}
@mixin shadow-level2 {
  box-shadow: 2px 2px 8px rgba(33, 38, 49, 0.12),
    2px 2px 16px rgba(33, 38, 49, 0.16);
}
@mixin shadow-level3 {
  box-shadow: 2px 4px 24px rgba(33, 38, 49, 0.28),
    2px 4px 24px rgba(33, 38, 49, 0.28);
}
@mixin shadow-level4 {
  box-shadow: 4px 8px 32px rgba(33, 38, 49, 0.24),
    2px 4px 40px rgba(33, 38, 49, 0.56);
}

//scroll
@mixin scrollY($backgroundColor) {
  overflow-y: auto;
  scrollbar-width: auto;
  -ms-overflow-style: auto;

  &::-webkit-scrollbar {
    display: block;
    width: 10px;
    height: 10px;
  }
  &::-webkit-scrollbar-thumb {
    background-color: semantic-color('background', 'ui-middle');
    border-radius: 0;
    border-right: 4px solid $backgroundColor;
  }

  &::-webkit-scrollbar-track {
    background-color: transparent;
  }
}
@mixin scrollX($backgroundColor) {
  overflow-x: auto;
  scrollbar-width: auto;
  -ms-overflow-style: auto;

  &::-webkit-scrollbar {
    display: block;
    width: 10px;
    height: 10px;
  }
  &::-webkit-scrollbar-thumb {
    background-color: semantic-color('background', 'ui-middle');
    border-radius: 0;
    border-bottom: 4px solid $backgroundColor;
  }

  &::-webkit-scrollbar-track {
    background-color: transparent;
  }
}

@mixin helper-text-with-icon {
  .helper-text {
    display: flex;
    align-items: center;
    gap: 4px;
    padding-top: 0;
    color: semantic-color('text', 'subtlest');

    .text {
      width: 100%;
    }

    &.disabled {
      color: semantic-color('text', 'disabled');
    }
    &.error {
      color: semantic-color('text', 'error');
    }
    &.success {
      color: semantic-color('text', 'success');
    }

    .icon-error,
    .icon-success {
      display: inline-block;
      width: 16px;
      height: 16px;

      svg {
        width: 16px;
        height: 16px;
      }
    }
  }
}

@mixin ellipsis($lineNum: 1) {
  @if ($lineNum == 1) {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  } @else {
    display: -webkit-box;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: wrap;
    word-wrap: break-word;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: $lineNum;
  }
}

// interaction
@mixin rippleAnimation {
  @keyframes ripple-animation {
    50% {
      transform: scale(0.5);
      opacity: 0.3;
    }
    100% {
      transform: scale(1);
      opacity: 0;
    }
  }
}

@keyframes rotate {
  100% {
    transform: rotate(360deg);
  }
}
@keyframes dash {
  0% {
    stroke-dasharray: 1, 150;
    stroke-dashoffset: 0;
  }
  50% {
    stroke-dasharray: 90, 150;
    stroke-dashoffset: -35;
  }
  100% {
    stroke-dasharray: 90, 150;
    stroke-dashoffset: -124;
  }
}
// 반응형
@mixin media-desktop-l {
  @media only screen and (min-width: #{$--breakpoint-desktop-l}px) {
    @content;
  }
}

@mixin media-desktop-m {
  @media only screen and (max-width: #{$--breakpoint-desktop-l}px) {
    @content;
  }
}

@mixin media-tablet-m {
  @media only screen and (max-width: #{$--breakpoint-tablet-m}px) {
    @content;
  }
}

@mixin media-tablet-s {
  @media only screen and (max-width: #{$--breakpoint-tablet-s}px) {
    @content;
  }
}

@mixin media-mobile-m {
  @media only screen and (max-width: #{$--breakpoint-mobile-m}px) {
    @content;
  }
}

@mixin media-mobile-s {
  @media only screen and (max-width: #{$--breakpoint-mobile-s}px) {
    @content;
  }
}
