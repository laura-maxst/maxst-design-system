.tab-wrap{
  overflow: hidden;

  .tab-bar{
    overflow: hidden;
    position: relative;
    margin-left: 56px;
    margin-right: 56px;
    
    &.fixed{
      .tab-bar__list > button{
        width: 100%;
        flex-grow: 1;
        flex-shrink: 1;
      }
    }

    .control{
      display: none;
      position: absolute;
      top: 0;
      z-index: 999;
      background-color: semantic-color('background', 'base');
      &::before{
        // position: absolute;
        // top:0;
        // left:0;
        content:'';
        display: block;
        width: 36px;
        height: 56px;
        background-color: semantic-color('background', 'base');
        z-index: -1;
      }

      &::after{
        content: '';
        display: block;
        position: absolute;
        top:0;
        right: -20px;
        width: 20px;
        height: 56px;
        background: linear-gradient(to left,rgba(255,255,255,0),semantic-color('background', 'base'));
      }

      button{
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
      }

      &.prev{
        left:0;
      }

      &.next{
        right:0;

        &::after{
          left: -20px;
          right:auto;
          background: linear-gradient(to right,rgba(255,255,255,0),semantic-color('background', 'base'));
        }
      }
    }
  }
  .tab-bar__list{
    position: absolute;
    top: 0;
    left:0;
    display: flex;
    align-items: center;
    gap:12px;

    & > button{
      display: flex;
      align-items: center;
      gap:2px;
      min-width: 80px;
      height: 56px;
      padding-left: 20px;
      padding-right: 20px;
      color: semantic-color('text', 'subtlest');
      cursor: pointer;
      overflow: hidden;

      .font-label {
        color: semantic-color('text', 'subtlest');
        @include ellipsis(1);
        min-width: 20px;
      }

      .chips{
        min-width: 20px;
        height: 20px;
        border-radius: 10px;
        font-size: 14px;
        text-align: center;
        line-height: 20px;
        color: semantic-color('text', 'default-reverse') !important;
        background-color: semantic-color('background', 'ui-middle');
      }
    }

    svg{
      min-width: 24px;
      width: 24px;
      height: 24px;
    }

  }

  .tab-panel{
    padding: 32px 56px;
    border-top: 1px solid semantic-color('divider', 'default');
  }

  @include media-tablet-m {
    .tab-bar{
      margin-left: 48px;
      margin-right: 48px;
    } 
    .tab-panel{
      padding-left: 48px;
      padding-right: 48px;
    }
  }

  @include media-mobile-m {
    .tab-bar{
      margin-left: 16px;
      margin-right: 16px;
    }
    .tab-panel{
      padding-left: 16px;
      padding-right: 16px;
    }
  }
}

@mixin tabStylePressed {
  color: semantic-color('text', 'default');
  p, span {
    color: semantic-color('text', 'default');
  }
  background-color: semantic-color('background', 'ui-base');
}

@mixin tabStyleDisabled {
  color: semantic-color('text', 'disabled') !important;
  p, span {
    color: semantic-color('text', 'disabled') !important;
  }
  background-color: semantic-color('background', 'disabled') !important;
  cursor: auto;
}

$tabSize: 'l', 'm', 's';
$tabState: 'default', 'pressed', 'disabled';

@mixin tabCase($size, $state){
  .tab-wrap {
    .tab-bar__#{$size}{
      @if($size == 's'){
        height: 40px;
  
        .control{
          &::before, &::after{
            height: 40px;
          }
        }
      }@else if($size == 'm'){
        height: 48px;
  
        .control{
          &::before, &::after{
            height: 48px;
          }
        }
      }@else if($size == 'l'){
        height: 56px;
      }
    }
    .tab-bar__list{
      button.tab-#{$size}-#{$state}{
        @if($size == 's'){
          height: 40px;
          padding-left: 12px;
          padding-right: 12px;
  
          svg{
            width: 20px;
            height: 20px;
          }
        }@else if($size == 'm'){
          height: 48px;
          padding-left: 16px;
          padding-right: 16px;
        }@else if($size == 'l'){
          height: 56px;
          padding-left: 20px;
          padding-right: 20px;
        }
  
        &:hover, &:focus, &:active{
          @include tabStylePressed;
        }
  
        @if($state == 'pressed'){
          @include tabStylePressed;
        }@else if($state == 'disabled'){
          @include tabStyleDisabled;
        }
  
        &.checked {
          position: relative;
          color: semantic-color('text', 'default');
          p, span {
            color: semantic-color('text', 'default');
          }
  
          &::after{
            position: absolute;
            bottom: 0;
            left: 0;
            content:'';
            display: block;
            width: 100%;
            height: 2px;
            background-color: semantic-color('border', 'accent');
          }
        }
      }
  
    }

  }
}

@each $size in $tabSize{
  @each $state in $tabState{
    @include tabCase($size, $state);
  }
}